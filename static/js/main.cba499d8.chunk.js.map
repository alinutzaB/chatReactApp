{"version":3,"sources":["Message.js","MessageList.js","SendMessageForm.js","App.js","index.js","config.js"],"names":["Message","props","className","username","text","MessageList","this","messages","map","message","index","key","senderId","React","Component","SendMessageForm","state","handleChange","bind","handleSubmit","e","setState","target","value","preventDefault","sendMessage","onSubmit","placeholder","type","onChange","App","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","tokenUrl","connect","then","currentUser","subscribeToRoom","roomId","hooks","onMessage","messageLimit","ReactDOM","render","document","getElementById","exports"],"mappings":"yQAWeA,MATf,SAAiBC,GAChB,OACC,yBAAKC,UAAU,WACd,yBAAKA,UAAU,oBAAoBD,EAAME,UACzC,yBAAKD,UAAU,gBAAgBD,EAAMG,QCWzBC,E,iLAZb,OACC,yBAAKH,UAAU,gBACbI,KAAKL,MAAMM,SAASC,KAAI,SAACC,EAASC,GAClC,OACC,kBAAC,EAAD,CAASC,IAAKD,EAAOP,SAAUM,EAAQG,SAAUR,KAAMK,EAAQL,e,GAN3CS,IAAMC,WCmCjBC,E,YAnCd,WAAYd,GAAQ,IAAD,8BAClB,4CAAMA,KACDe,MAAQ,CACZP,QAAS,IAGV,EAAKQ,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPF,E,0EAUNE,GACZd,KAAKe,SAAS,CACbZ,QAASW,EAAEE,OAAOC,U,mCAIPH,GACNA,EAAEI,iBACFlB,KAAKL,MAAMwB,YAAYnB,KAAKU,MAAMP,SAClCH,KAAKe,SAAS,CACbZ,QAAQ,O,+BAOf,OACC,0BAAMiB,SAAUpB,KAAKa,aAAcjB,UAAU,qBAChC,2BAAOyB,YAAY,kCAAmCC,KAAK,OAAOC,SAAUvB,KAAKW,aAAcM,MAAOjB,KAAKU,MAAMP,e,GA9BnGI,IAAMC,W,OCmErBgB,E,YAxDb,WAAY7B,GAAO,IAAD,8BAChB,4CAAMA,KACDe,MAAQ,CACXT,SAAU,IAGZ,EAAKkB,YAAc,EAAKA,YAAYP,KAAjB,gBANH,E,iFASG,IAAD,OACE,IAAIa,IAAQC,YAAY,CACxCC,kCACAC,OAAQ,YACRC,cAAe,IAAIJ,IAAQK,cAAc,CACrCC,IAAKC,eAIDC,UACXC,MAAK,SAAAC,GACJ,EAAKA,YAAcA,EACnB,EAAKA,YAAYC,gBAAgB,CAC/BC,OAAQ,uCACRC,MAAO,CACLC,UAAW,SAAApC,GAET,EAAKY,SAAS,CACZd,SAAS,GAAD,mBAAM,EAAKS,MAAMT,UAAjB,CAA2BE,QAIzCqC,aAAc,U,kCAKR1C,GACVE,KAAKmC,YAAYhB,YAAY,CAC3BrB,OACAuC,OAAQ,2C,+BAMV,OACE,yBAAKzC,UAAU,OACX,kBAAC,EAAD,CAAaK,SAAUD,KAAKU,MAAMT,WAClC,kBAAC,EAAD,CAAiBkB,YAAanB,KAAKmB,mB,GAlD3BZ,IAAMC,WCNxBiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,gBCFjDC,EAAQb,SAHS,8GAIjBa,EAAQlB,gBAHgB,gD","file":"static/js/main.cba499d8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Message(props) {\n\treturn(\n\t\t<div className=\"message\">\n\t\t\t<div className=\"message-username\">{props.username}</div>\n\t\t\t<div className=\"message-text\">{props.text}</div>\n\t\t</div>\n\t)\n}\n\nexport default Message;","import React from 'react';\nimport Message from './Message';\n\nclass MessageList extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"message-list\">\n\t\t\t\t{this.props.messages.map((message, index)  => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Message key={index} username={message.senderId} text={message.text} />\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\t\n\t\t);\n\t}\n}\n\nexport default MessageList;","import React from 'react';\n\nclass SendMessageForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tmessage: \"\"\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(e){\n\t\tthis.setState({\n\t\t\tmessage: e.target.value\n\t\t})\n\t}\n\n\thandleSubmit(e) {\n        e.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({\n        \tmessage:\"\"\n        })\n    }\n\t\n\n\trender() {\n\n\t\treturn(\n\t\t\t<form onSubmit={this.handleSubmit} className=\"send-message-form\">\n                <input placeholder=\"Type your message and hit ENTER\"  type=\"text\" onChange={this.handleChange} value={this.state.message} />\n            </form>\t\n\t\t);\n\t}\n}\n\nexport default SendMessageForm;","import React from 'react'\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client'\nimport Chatkit from '@pusher/chatkit-client'\nimport MessageList from './MessageList'\nimport Message from './Message'\nimport SendMessageForm from './SendMessageForm'\n\nimport { tokenUrl, instanceLocator } from './config'\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      messages: []\n    }\n\n    this.sendMessage = this.sendMessage.bind(this)\n  }\n\n  componentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n        instanceLocator,\n        userId: 'perborgen',\n        tokenProvider: new Chatkit.TokenProvider({\n            url: tokenUrl\n        })\n    })\n    \n    chatManager.connect()\n    .then(currentUser => {\n      this.currentUser = currentUser\n      this.currentUser.subscribeToRoom({\n        roomId: \"517c600d-c933-4d61-a4f5-86e5d2ab9921\",\n        hooks: {\n          onMessage: message => {\n            //console.log('message.text: ', message.text);\n            this.setState({\n              messages: [...this.state.messages, message]\n            })\n          }\n        },\n        messageLimit: 10\n      })\n    })\n  }\n\n  sendMessage(text) {\n    this.currentUser.sendMessage({\n      text,\n      roomId: \"517c600d-c933-4d61-a4f5-86e5d2ab9921\"\n    })\n  }\n\n  render() {\n    //console.log('this.state.messages:', this.state.messages);\n    return(\n      <div className=\"app\">\n          <MessageList messages={this.state.messages} />\n          <SendMessageForm sendMessage={this.sendMessage}/>\n       </div>\n    );\n  }\n}\n\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/252e56ff-2ed0-4fd5-9fd9-601be1f8f76e/token\";\nconst instanceLocator = \"v1:us1:252e56ff-2ed0-4fd5-9fd9-601be1f8f76e\";\n\nexports.tokenUrl = tokenUrl;\nexports.instanceLocator = instanceLocator;"],"sourceRoot":""}